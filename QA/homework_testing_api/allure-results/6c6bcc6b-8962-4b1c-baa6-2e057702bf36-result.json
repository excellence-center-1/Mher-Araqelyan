{"name": "test_get_videos_without_token", "status": "broken", "statusDetails": {"message": "TypeError: Test_without_token.test_get_videos_without_token() takes 0 positional arguments but 1 was given", "trace": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x7fa41d88e050>, when = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../../.local/lib/python3.10/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.10/site-packages/_pytest/runner.py:262: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../../.local/lib/python3.10/site-packages/pluggy/_hooks.py:493: in __call__\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n../../../.local/lib/python3.10/site-packages/pluggy/_manager.py:115: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../.local/lib/python3.10/site-packages/_pytest/runner.py:177: in pytest_runtest_call\n    raise e\n../../../.local/lib/python3.10/site-packages/_pytest/runner.py:169: in pytest_runtest_call\n    item.runtest()\n../../../.local/lib/python3.10/site-packages/_pytest/python.py:1792: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\n../../../.local/lib/python3.10/site-packages/pluggy/_hooks.py:493: in __call__\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n../../../.local/lib/python3.10/site-packages/pluggy/_manager.py:115: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npyfuncitem = <Function test_get_videos_without_token>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem: \"Function\") -> Optional[object]:\n        testfunction = pyfuncitem.obj\n        if is_async_function(testfunction):\n            async_warn_and_skip(pyfuncitem.nodeid)\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\nE       TypeError: Test_without_token.test_get_videos_without_token() takes 0 positional arguments but 1 was given\n\n../../../.local/lib/python3.10/site-packages/_pytest/python.py:194: TypeError"}, "start": 1705598996597, "stop": 1705598996598, "uuid": "d6e11382-4974-43bb-8340-2758a62c3d05", "historyId": "da046d70148ab6f1b589f088ad94b210", "testCaseId": "da046d70148ab6f1b589f088ad94b210", "fullName": "test_api.Test_without_token#test_get_videos_without_token", "labels": [{"name": "tag", "value": "Without token"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "Test_without_token"}, {"name": "host", "value": "mher-desktop"}, {"name": "thread", "value": "82819-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}