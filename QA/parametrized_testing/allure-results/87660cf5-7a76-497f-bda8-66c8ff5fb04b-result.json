{"name": "Test Authentication (Data: {'title': 'testvideo11', 'category': 'Sport', 'url': 'https://www.youtube.com/embed/0bYDeZpIZvk?si=z8POfOgCnQxEn1Vq'})", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: Status code is not 200. Expected 200.\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "get_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RAbWFpbC5jb20iLCJpYXQiOjE3MDU2MDIxMzYsImV4cCI6MTcwNTY4ODUzNn0.rhAi24P__FeexseJdDF7QP2Z0VBEHirrhRpq9DqAa48'\nvideo_data = {'category': 'Sport', 'title': 'testvideo11', 'url': 'https://www.youtube.com/embed/0bYDeZpIZvk?si=z8POfOgCnQxEn1Vq'}\n\n    @pytest.mark.parametrize(\"video_data\", [\n        {\n            \"title\": \"testvideo99\",\n            \"category\": \"Sport\",\n            \"url\": \"https://www.youtube.com/embed/0bYDeZpIZvk?si=z8POfOgCnQxEn1Vq\"\n        },\n        {\n            \"title\": \"testvideo10\",\n            \"category\": \"Sport\",\n            \"url\": \"https://www.youtube.com/embed/0bYDeZpIZvk?si=z8POfOgCnQxEn1Vq\"\n        },\n        {\n            \"title\": \"testvideo11\",\n            \"category\": \"Sport\",\n            \"url\": \"https://www.youtube.com/embed/0bYDeZpIZvk?si=z8POfOgCnQxEn1Vq\"\n        }\n    \n    ])\n    @pytest.mark.xfail\n    @allure.title(\"Test Authentication (Data: {video_data})\")\n    def test_create_video_with_token(get_token,video_data):\n        allure.attach.file('./test.txt',attachment_type=allure.attachment_type.TEXT)\n        headers = {\"Authorization\": f\"Bearer {get_token}\"}\n        response = requests.post(f\"{API_BASE_URL}/video/create\", headers=headers, json=video_data)\n        cursor.execute(f\"SELECT * FROM videos WHERE title = '{video_data['title']}'\")\n        row = cursor.fetchone()\n>       assert response.status_code == 200, \"Status code is not 200. Expected 200.\"\nE       AssertionError: Status code is not 200. Expected 200.\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntest_api.py:34: AssertionError"}, "attachments": [{"source": "fde455c1-a908-4c02-9539-ecd49288eeb3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "video_data", "value": "{'title': 'testvideo11', 'category': 'Sport', 'url': 'https://www.youtube.com/embed/0bYDeZpIZvk?si=z8POfOgCnQxEn1Vq'}"}], "start": 1705602136810, "stop": 1705602136815, "uuid": "072f36b6-e222-4c12-abd7-819f2177072e", "historyId": "b471433554d141153621a2a57a64a02a", "testCaseId": "15efb40509332cfbd7fade32bf36988c", "fullName": "test_api#test_create_video_with_token", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "mher-desktop"}, {"name": "thread", "value": "113092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}